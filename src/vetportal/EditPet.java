/**
 * File: EditPet.java
 * Date: April 23, 2020
 * @Author: Nour Debiat, Brian Rease
 * Purpose: This window displays the window where staff can add a edit an existing pet.
 */

package vetportal;

import com.github.lgooddatepicker.components.DatePicker;
import com.github.lgooddatepicker.components.DatePickerSettings;
import java.awt.Color;
import javax.swing.*;
import java.text.ParseException;

public class EditPet extends JFrame {

    // Create a new VetPortal instance
    VetPortal vetPortal;

    String currentName, currentSpecies, currentGender, currentDateOfBirth;

    /**
     * Creates new form AddPet
     * @param vetPortal The instance of the Vet Portal
     * @param currentName The current name of the pet
     * @param currentSpecies The current species of the pet
     * @param currentGender The current gender of the pet
     * @param currentDateOfBirth The current date of birth of the pet
     * @throws java.text.ParseException
     */
    public EditPet(VetPortal vetPortal, String currentName, String currentSpecies, String currentGender, String currentDateOfBirth) throws ParseException {
        super("Edit Pet Form");
        this.vetPortal = vetPortal;
        this.currentName = currentName;
        this.currentSpecies = currentSpecies;
        this.currentGender = currentGender;
        this.currentDateOfBirth = currentDateOfBirth;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() throws ParseException {
        addPetPanel = new JPanel();
        cancelBtn = new JButton();
        submitBtn = new JButton();
        addPetLabel = new JLabel();
        petNameLabel = new JLabel();
        speciesLabel = new JLabel();
        genderLabel = new JLabel();
        petNameField = new JTextField();
        cancelInstructionLabel = new JLabel();
        speciesDropDown = new JComboBox<>();
        genderDropDown = new JComboBox<>();
        dobLabel = new JLabel();
        // Create date picker settings to define the date format
        DatePickerSettings dateSettings = new DatePickerSettings();
        dateSettings.setFormatForDatesCommonEra("yyyy-MM-dd");
        dateSettings.setFormatForDatesBeforeCommonEra("uuuu-MM-dd"); 
        dobField = new DatePicker(dateSettings);      
        warningField = new JLabel();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        addPetPanel.setBackground(new java.awt.Color(255, 255, 255));

        cancelBtn.setBackground(new java.awt.Color(255, 255, 255));
        cancelBtn.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        cancelBtn.setForeground(new Color(122, 188, 255));
        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(event -> cancel());

        submitBtn.setBackground(new java.awt.Color(255, 255, 255));
        submitBtn.setForeground(new Color(122, 188, 255));
        submitBtn.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        submitBtn.setText("Submit");
        submitBtn.addActionListener(event -> editSelectedPet());

        addPetLabel.setBackground(new java.awt.Color(255, 255, 255));
        addPetLabel.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        addPetLabel.setText("<html>Edit the form below to edit the selected pet <br>or cancel to return to the Pets Dashboard</html>");
        addPetLabel.setMaximumSize(new java.awt.Dimension(74, 200));
        addPetLabel.setMinimumSize(new java.awt.Dimension(74, 200));

        petNameLabel.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        petNameLabel.setText("Pet Name");

        speciesLabel.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        speciesLabel.setText("Species");

        genderLabel.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        genderLabel.setText("Gender");

        petNameField.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        speciesDropDown.setEditable(true);
        speciesDropDown.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        speciesDropDown.setModel(new DefaultComboBoxModel<>(new String[] { "Dog", "Cat", "Bird", "Small Mammal", "Fish", "Reptile" }));        

        genderDropDown.setEditable(true);
        genderDropDown.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        genderDropDown.setModel(new DefaultComboBoxModel<>(new String[] { "F", "M", "FS", "MN" }));

        dobLabel.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        dobLabel.setText("Date of Birth");

        dobField.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        warningField.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        warningField.setForeground(new java.awt.Color(203, 0, 0));
        warningField.setHorizontalAlignment(SwingConstants.CENTER);

        GroupLayout addPetPanelLayout = new GroupLayout(addPetPanel);
        addPetPanel.setLayout(addPetPanelLayout);
        addPetPanelLayout.setHorizontalGroup(
                addPetPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(addPetPanelLayout.createSequentialGroup()
                                .addGroup(addPetPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(addPetPanelLayout.createSequentialGroup()
                                                .addGap(70, 70, 70)
                                                .addGroup(addPetPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addComponent(cancelInstructionLabel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(addPetLabel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(addPetPanelLayout.createSequentialGroup()
                                                .addGap(100, 100, 100)
                                                .addComponent(submitBtn)
                                                .addGap(54, 54, 54)
                                                .addComponent(cancelBtn))
                                        .addGroup(addPetPanelLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                                .addGroup(addPetPanelLayout.createSequentialGroup()
                                                        .addContainerGap()
                                                        .addComponent(warningField, GroupLayout.PREFERRED_SIZE, 385, GroupLayout.PREFERRED_SIZE))
                                                .addGroup(GroupLayout.Alignment.LEADING, addPetPanelLayout.createSequentialGroup()
                                                        .addGap(70, 70, 70)
                                                        .addGroup(addPetPanelLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                                                .addComponent(petNameLabel)
                                                                .addComponent(speciesLabel)
                                                                .addComponent(genderLabel)
                                                                .addComponent(dobLabel))
                                                        .addGap(18, 18, 18)
                                                        .addGroup(addPetPanelLayout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                                                                .addComponent(petNameField, GroupLayout.Alignment.LEADING)
                                                                .addComponent(speciesDropDown, GroupLayout.Alignment.LEADING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(genderDropDown, GroupLayout.Alignment.LEADING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(dobField, GroupLayout.Alignment.LEADING)))))
                                .addContainerGap(100, Short.MAX_VALUE))
        );
        addPetPanelLayout.setVerticalGroup(
                addPetPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(addPetPanelLayout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(addPetLabel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cancelInstructionLabel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addGroup(addPetPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(petNameLabel)
                                        .addComponent(petNameField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                .addGap(13, 13, 13)
                                .addGroup(addPetPanelLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                        .addComponent(speciesLabel)
                                        .addComponent(speciesDropDown, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(addPetPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(genderLabel)
                                        .addComponent(genderDropDown, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(addPetPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(dobLabel)
                                        .addComponent(dobField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(warningField)
                                .addGap(28, 28, 28)
                                .addGroup(addPetPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(submitBtn)
                                        .addComponent(cancelBtn))
                                .addContainerGap(99, Short.MAX_VALUE))
        );

        addPetLabel.getAccessibleContext().setAccessibleName("");

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(addPetPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(addPetPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        petNameField.setText(currentName);
        dobField.setText(currentDateOfBirth);
        setSpeciesDropDownIndex(currentSpecies);
        setGenderDropdownIndex(currentGender);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setSpeciesDropDownIndex(String currentSpecies) {
        switch (currentSpecies) {
            case "Dog":
                speciesDropDown.setSelectedIndex(0);
                break;
            case "Cat":
                speciesDropDown.setSelectedIndex(1);
                break;
            case "Bird":
                speciesDropDown.setSelectedIndex(2);
                break;
            case "Small Mammal":
                speciesDropDown.setSelectedIndex(3);
                break;
            case "Fish":
                speciesDropDown.setSelectedIndex(4);
                break;
            case "Reptile":
                speciesDropDown.setSelectedIndex(5);
                break;
            default:
                break;
        }
    } //end of setSpeciesDropdownIndex()

    private void setGenderDropdownIndex(String currentGender) {
        switch (currentGender) {
            case "F":
                genderDropDown.setSelectedIndex(0);
                break;
            case "M":
                genderDropDown.setSelectedIndex(1);
                break;
            case "FS":
                genderDropDown.setSelectedIndex(2);
                break;
            case "MN":
                genderDropDown.setSelectedIndex(3);
                break;
            default:
                break;
        }
    } //end of setGenderDropdownIndex()

    // Submit pet information
    private void editSelectedPet() {
        vetPortal.getVetDatabase().open();
        int pet_id = vetPortal.getVetDatabase().getPetID(currentName, currentSpecies, currentGender, currentDateOfBirth);
        Boolean editTF = vetPortal.editPet(warningField, pet_id, petNameField.getText(), (String)speciesDropDown.getSelectedItem(), (String)genderDropDown.getSelectedItem(), dobField.getText());

        // If edit was successful
        if(editTF) {
            // If success close the form
            dispose();
        }
        // If edit was not successful, cWarningMsg will convey any errors to the user

        // Refresh the Pets Table in the Dashboard
        DashboardsGui dashboard = vetPortal.getDashboard();
        DashboardsGui.MyPetTableModel model = (DashboardsGui.MyPetTableModel)dashboard.getPetTable().getModel();
        model.refetchPets();
    }

    // Cancel button function
    private void cancel() {
        //close the window
        dispose();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JLabel addPetLabel;
    private JPanel addPetPanel;
    private JButton cancelBtn;
    private JLabel cancelInstructionLabel;
    private DatePicker dobField;
    private JLabel dobLabel;
    private JComboBox<String> genderDropDown;
    private JLabel genderLabel;
    private JTextField petNameField;
    private JLabel petNameLabel;
    private JComboBox<String> speciesDropDown;
    private JLabel speciesLabel;
    private JButton submitBtn;
    private JLabel warningField;
    // End of variables declaration//GEN-END:variables
}

