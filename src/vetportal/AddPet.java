/**
 * File: AddPet.java
 * Date: April 22, 2020
 * @Author: Nour Debiat, Brian Rease, Rebekah Qu
 * Purpose: This window displays the window where staff can add a new pet to a client.
 */
package vetportal;

import com.github.lgooddatepicker.components.DatePicker;
import com.github.lgooddatepicker.components.DatePickerSettings;
import java.awt.*;
import java.text.ParseException;
import javax.swing.*;

public class AddPet extends JFrame {

    // Create a new VetPortal instance
    VetPortal vetPortal;

    //Variables to store Client's name:
    String clientFirstName;
    String clientLastName;

    /**
     * Creates new form AddPet
     * @param vetPortal The instance of the Vet Portal
     * @param clientFirstName The first name of the client who owns the pet
     * @param clientLastName The last name of the client who owns the pet
     * @throws java.text.ParseException
     */
    public AddPet(VetPortal vetPortal, String clientFirstName, String clientLastName) throws ParseException {
        super("Add New Pet Form");
        this.vetPortal = vetPortal;
        this.clientFirstName = clientFirstName;
        this.clientLastName = clientLastName;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() throws ParseException{

        addPetPanel = new JPanel();
        cancelBtn = new JButton();
        submitBtn = new JButton();
        addPetLabel = new JLabel();
        petNameLabel = new JLabel();
        clientNameLabel = new JLabel();
        speciesLabel = new JLabel();
        genderLabel = new JLabel();
        petNameField = new JTextField();
        clientNameField = new JTextField(clientFirstName + " " + clientLastName);
        cancelInstructionLabel = new JLabel();
        speciesDropDown = new JComboBox<>();
        genderDropDown = new JComboBox<>();
        dobLabel = new JLabel();
        // Create date picker settings to define the date format
        DatePickerSettings dateSettings = new DatePickerSettings();
        dateSettings.setFormatForDatesCommonEra("yyyy-MM-dd");
        dateSettings.setFormatForDatesBeforeCommonEra("uuuu-MM-dd"); 
        dobField = new DatePicker(dateSettings);
        warningField = new JLabel();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        addPetPanel.setBackground(new java.awt.Color(255, 255, 255));

        cancelBtn.setBackground(new java.awt.Color(255, 255, 255));
        cancelBtn.setForeground(new Color(122, 188, 255));
        cancelBtn.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(event -> cancel());

        submitBtn.setBackground(new java.awt.Color(255, 255, 255));
        submitBtn.setForeground(new Color(122, 188, 255));
        submitBtn.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        submitBtn.setText("Submit");
        submitBtn.addActionListener(event -> {
            try {
                submit();
            } catch (ParseException e) {
                // Do nothing if error occurs
            }
        });

        addPetLabel.setBackground(new java.awt.Color(255, 255, 255));
        addPetLabel.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        addPetLabel.setText("Fill out the form below to add new pet");
        addPetLabel.setMaximumSize(new java.awt.Dimension(74, 200));
        addPetLabel.setMinimumSize(new java.awt.Dimension(74, 200));

        petNameLabel.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        petNameLabel.setText("Pet Name");

        clientNameLabel.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        clientNameLabel.setText("Client Name");

        speciesLabel.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        speciesLabel.setText("Species");

        genderLabel.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        genderLabel.setText("Gender");

        petNameField.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        clientNameField.setEditable(false);
        clientNameField.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        cancelInstructionLabel.setBackground(new java.awt.Color(255, 255, 255));
        cancelInstructionLabel.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        cancelInstructionLabel.setText("or cancel to return to Clients Dashboard");
        cancelInstructionLabel.setMaximumSize(new java.awt.Dimension(74, 200));
        cancelInstructionLabel.setMinimumSize(new java.awt.Dimension(74, 200));

        speciesDropDown.setEditable(true);
        speciesDropDown.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        speciesDropDown.setModel(new DefaultComboBoxModel<>(new String[] { "Dog", "Cat", "Bird", "Small Mammal", "Fish", "Reptile" }));

        genderDropDown.setEditable(true);
        genderDropDown.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        genderDropDown.setModel(new DefaultComboBoxModel<>(new String[] { "F", "M", "FS", "MN" }));

        dobLabel.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        dobLabel.setText("Date of Birth");

        dobField.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        warningField.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        warningField.setForeground(new java.awt.Color(203, 0, 0));
        warningField.setHorizontalAlignment(SwingConstants.CENTER);

        GroupLayout addPetPanelLayout = new GroupLayout(addPetPanel);
        addPetPanel.setLayout(addPetPanelLayout);
        addPetPanelLayout.setHorizontalGroup(
            addPetPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(addPetPanelLayout.createSequentialGroup()
                .addGroup(addPetPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(addPetPanelLayout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(addPetPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(cancelInstructionLabel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(addPetLabel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                    .addGroup(addPetPanelLayout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(submitBtn)
                        .addGap(54, 54, 54)
                        .addComponent(cancelBtn))
                    .addGroup(addPetPanelLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                        .addGroup(addPetPanelLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(warningField, GroupLayout.PREFERRED_SIZE, 385, GroupLayout.PREFERRED_SIZE))
                        .addGroup(GroupLayout.Alignment.LEADING, addPetPanelLayout.createSequentialGroup()
                            .addGap(70, 70, 70)
                            .addGroup(addPetPanelLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                .addComponent(clientNameLabel)
                                .addComponent(petNameLabel)
                                .addComponent(speciesLabel)
                                .addComponent(genderLabel)
                                .addComponent(dobLabel))
                            .addGap(18, 18, 18)
                            .addGroup(addPetPanelLayout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                                .addComponent(clientNameField, GroupLayout.Alignment.LEADING)
                                .addComponent(petNameField, GroupLayout.Alignment.LEADING)
                                .addComponent(speciesDropDown, GroupLayout.Alignment.LEADING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addComponent(genderDropDown, GroupLayout.Alignment.LEADING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addComponent(dobField, GroupLayout.Alignment.LEADING)))))
                .addContainerGap(100, Short.MAX_VALUE))
        );
        addPetPanelLayout.setVerticalGroup(
            addPetPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(addPetPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(addPetLabel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelInstructionLabel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(addPetPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(petNameLabel)
                    .addComponent(petNameField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addPetPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(clientNameLabel)
                    .addComponent(clientNameField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addPetPanelLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addComponent(speciesLabel)
                    .addComponent(speciesDropDown, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addPetPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(genderLabel)
                    .addComponent(genderDropDown, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addPetPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(dobLabel)
                    .addComponent(dobField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(warningField)
                .addGap(28, 28, 28)
                .addGroup(addPetPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(submitBtn)
                    .addComponent(cancelBtn))
                .addContainerGap(99, Short.MAX_VALUE))
        );

        addPetLabel.getAccessibleContext().setAccessibleName("");

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(addPetPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(addPetPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Submit pet information
    private void submit() throws ParseException {
        // Attempt to create a new pet
        createNewPet();
    }

    // Create a new pet function
    private void createNewPet() throws ParseException {
        Object clientPhoneNumber =  vetPortal.getDashboard().getMyClientTableModel().getValueAt(vetPortal.getDashboard().getClientTable().getSelectedRow(), 3);
        vetPortal.getVetDatabase().open();
        int client_id = vetPortal.getVetDatabase().getClientID((String)clientPhoneNumber);
        Boolean createTF = vetPortal.createPet(warningField, petNameField.getText(), String.valueOf(speciesDropDown.getSelectedItem()), String.valueOf(genderDropDown.getSelectedItem()), dobField.getText(), client_id);

        // If creation was successful
        if(createTF) {
            // If success, reset the form
            petNameField.setText(null);
            clientNameField.setText(null);
            dobField.setText(null);
            // And close it
            dispose();
            
             // Refresh the Pets Table in the Dashboard
            DashboardsGui dashboard = vetPortal.getDashboard();
            DashboardsGui.MyPetTableModel model = (DashboardsGui.MyPetTableModel)dashboard.getPetTable().getModel();
            model.refetchPets();
            // Redirect the user to the pets tab
            dashboard.moveToPetTab(false);
        }
        // If creation was not successful, cWarningMsg will convey any errors to the user

    }

    // Cancel button function
    private void cancel() {
        //close the window
        dispose();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JLabel addPetLabel;
    private JPanel addPetPanel;
    private JButton cancelBtn;
    private JLabel cancelInstructionLabel;
    private JTextField clientNameField;
    private JLabel clientNameLabel;
    private DatePicker dobField;
    private JLabel dobLabel;
    private JComboBox<String> genderDropDown;
    private JLabel genderLabel;
    private JTextField petNameField;
    private JLabel petNameLabel;
    private JComboBox<String> speciesDropDown;
    private JLabel speciesLabel;
    private JButton submitBtn;
    private JLabel warningField;
    // End of variables declaration//GEN-END:variables
}
